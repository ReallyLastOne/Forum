package com.forum.model;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.time.LocalDateTime;
import java.util.Comparator;
import java.util.List;
import java.util.Optional;

@Entity
@Getter
@Setter
@NoArgsConstructor
public class Thread {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @NotNull
    private String name;

    @OneToMany(orphanRemoval = true, mappedBy = "thread")
    private List<Post> posts;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "section_id") // not necessary, automatically generated by mappedBy in referencing site
    private Section section;

    public void addPost(Post post) {
        posts.add(post);
        post.setThread(this);
    }

    public void removePost(Post post) {
        posts.remove(post);
        post.setThread(null);
    }

    public Optional<Post> findMostRecentPost() {
        return posts.stream().max(Comparator.comparing(Post::getCreationDate));
    }
}
